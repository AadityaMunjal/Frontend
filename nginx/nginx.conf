worker_processes auto;

events {
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

  # redirect www -> non-www
  #TODO : WHEN OTHER SITES LAUNCH
  server {
    listen 80;
    server_name docs.api.dev.twtcodejam.net;
    return 404;
  }

  server {
    listen 80;
    server_name dev.twtcodejam.net;
    return 301 https://dev.twtcodejam.net$request_uri;
         }

  server{
    listen 443 ssl;
    server_name dev.twtcodejam.net;

    ssl_certificate /etc/nginx/certs/dev.twtcodejam.net/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/dev.twtcodejam.net/privkey.pem;

    access_log /var/log/nginx/data-access.log combined;
    
    root /var/www;
    index index.html index.htm;
    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
  }
  
  server {
    server_name www.api.dev.twtcodejam.net;
    return 301 $scheme://api.dev.twtcodejam.net$request_uri;
  }

  # redirect http -> https

  #server {
  #  listen 80;
  #  server_name api.dev.twtcodejam.net;
  #  return 301 https://api.dev.twtcodejam.net$request_uri;
  #       }

  # read the ssl certificate / key when listening on https

   server {
    listen 443 ssl;
    server_name api.dev.twtcodejam.net;

    ssl_certificate /etc/nginx/certs/api.dev.twtcodejam.net/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/api.dev.twtcodejam.net/privkey.pem;

    access_log /var/log/nginx/data-access.log combined;

    # fetch data from proxied server when /api is called

    location / {
       proxy_pass http://backend:5000/;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_redirect http://backend:5000/ $scheme://$http_host/;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
       proxy_read_timeout 20d;
       proxy_buffering off;
       }

   }

}
